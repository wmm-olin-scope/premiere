// Generated by CoffeeScript 1.6.3
var contentDiv, countdownLength, getCookie, movieDone, movieStart, setupCategory, startCountdownBar, startMovie, startMovieCheck, startPostshow, startPreshow, switchContent, transition, userCategory;

contentDiv = $("#content");

movieStart = Date.now() + 14 * 1000;

movieDone = movieStart + 10 * 1000;

countdownLength = 15 * 60 * 1000;

userCategory = "General";

switchContent = function(contentUrl, done) {
  if (done == null) {
    done = null;
  }
  return $.ajax(contentUrl).fail(function(err) {
    return console.log(err);
  }).done(function(content) {
    contentDiv.html(content);
    if (done) {
      return done();
    }
  });
};

transition = function(request, title, duration) {
  var progressBar, progressWindow;
  if (title == null) {
    title = null;
  }
  if (duration == null) {
    duration = 750;
  }
  $("body").append("<div id=\"progress-window\">\n    <div id=\"progress-bar\"></div>\n</div>");
  progressWindow = $("#progress-window");
  progressBar = $("#progress-bar", progressWindow);
  progressWindow.dialog({
    dialogClass: "dialog-no-close",
    width: 600,
    height: 102,
    modal: true,
    resizable: false,
    draggable: false,
    closeOnEscape: false
  });
  if (title) {
    progressWindow.dialog("option", "title", title);
  } else {
    $(".ui-dialog-titlebar", progressWindow.parent()).css("display", "none");
  }
  progressWindow.dialog("open");
  progressBar.progressbar({
    value: false
  });
  return request.always(function() {
    progressBar.progressbar({
      value: 1
    });
    return $(".ui-progressbar-value", progressBar).animate({
      width: "100%"
    }, {
      duration: duration,
      complete: function() {
        progressWindow.dialog("close");
        return progressWindow.parent().remove();
      }
    });
  });
};

getCookie = function(name) {
  var re, result;
  re = new RegExp("(?:^" + name + "|;\s*" + name + ")=(.*?)(?:;|$)", "g");
  result = re.exec(document.cookie);
  if (result) {
    return result[1];
  } else {
    return null;
  }
};

startPreshow = function(category) {
  var req;
  if (category == null) {
    category = "General";
  }
  req = switchContent("/premiere/preshow/" + category, function() {
    return startCountdownBar();
  });
  return transition(req);
};

setupCategory = function() {
  var category, onClickCategory;
  onClickCategory = function(category) {
    userCategory = category;
    return startPreshow(category);
  };
  category = null;
  if (category !== null) {
    return onClickCategory(category);
  } else {
    return switchContent("/premiere/category", function() {
      var _i, _len, _ref, _results;
      _ref = ["General", "Student", "Parent", "Educator"];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        category = _ref[_i];
        _results.push((function(category) {
          return $("button#" + category).on("click", function() {
            return onClickCategory(category);
          });
        })(category));
      }
      return _results;
    });
  }
};

startCountdownBar = function() {
  var bar, delta, div, width;
  bar = $("#countdown-bar");
  delta = movieStart - Date.now();
  console.log(delta, bar);
  if (delta > countdownLength) {
    console.log("SHIT!");
    div = $("countdown");
    div.hide();
    setTimeout((function() {
      div.show();
      return startCountdownBar();
    }), delta - countdownLength);
    return;
  }
  width = 100 * Math.max(0.01, 1 - delta / countdownLength);
  console.log(width);
  bar.css({
    width: "" + width + "%"
  });
  return bar.animate({
    width: "100%"
  }, {
    duration: delta,
    easing: "linear"
  });
};

startMovieCheck = function() {
  return setTimeout(startMovie, movieStart - Date.now());
};

startMovie = function() {
  transition(switchContent("/premiere/movie"), "Starting Movie", 3000);
  return setTimeout(startPostshow, movieDone - Date.now());
};

startPostshow = function() {
  return transition(switchContent("/premiere/postshow/" + userCategory));
};

$(function() {
  if (Date.now() > movieDone) {
    return startPostshow();
  } else if (Date.now() > movieStart) {
    return startMovie();
  } else {
    setupCategory();
    return startMovieCheck();
  }
});
